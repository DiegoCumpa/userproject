{
	"info": {
		"_postman_id": "6bac3933-7d5f-41f9-ae3c-24afd2e47529",
		"name": "CRUD USER",
		"description": "``` antlr4\nMicroservicio Java 17 Spring Boot, obtiene, guarda, actualiza y elimina datos de la entidad usuario. El servicio se conecta con una base de datos mongoDB, a la colecci√≥n \"usuarios\". Adicionalmente cuenta con pruebas unitarias, manejo de errores y manejo de limite de solicitudes consecutivas para cada endpoint. \n\n ```",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34225881"
	},
	"item": [
		{
			"name": "GET USERS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Email is in a valid format\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('array');\r",
							"  responseData.forEach(function(user) {\r",
							"    pm.expect(user.email).to.be.a('string').and.to.match(/^.+@.+\\..+$/);\r",
							"  });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Phone field should not be empty\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('array');\r",
							"  responseData.forEach(function(user) {\r",
							"    pm.expect(user.phone).to.exist.and.to.not.be.empty;\r",
							"  });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Status is a boolean value\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    responseData.forEach(function(user) {\r",
							"        pm.expect(user.status).to.be.a('boolean');\r",
							"    });\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8081/v1/users",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST USER",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Juan Rodriguez\",\r\n    \"email\": \"juanitos@gmail.com\",\r\n    \"password\": \"Dieguito#1\",\r\n    \"phones\": [\r\n        {\r\n            \"number\": \"1234567\",\r\n            \"citycode\": \"1\",\r\n            \"contrycode\": \"57\"\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8081/v1/users",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT USER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Juana Rodriguez\",\r\n    \"email\": \"juan@rodriguez.org\",\r\n    \"password\": \"Hunter3$\",\r\n    \"phones\": [\r\n        {\r\n            \"number\": \"12345678\",\r\n            \"citycode\": \"1\",\r\n            \"contrycode\": \"57\"\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8081/v1/users/66c8b882d0487321c1c27afe",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"v1",
						"users",
						"66c8b882d0487321c1c27afe"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE USER",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8081/v1/users/{{$id}}}",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"v1",
						"users",
						"{{$id}}}"
					]
				}
			},
			"response": []
		}
	]
}